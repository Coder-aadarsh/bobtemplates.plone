====================================
Some notes about the theme structure
====================================

Configuring Plone within the theme package
==========================================

To configure Plone when this package is installed, you can use GenericSetup profiles in profiles/default.
To revert the settings when the package is being uninstalled, place the default Plone configurations inside the profiles/uninstall folder.

Providing new template or override existing once
================================================

With the integration of `plone.app.themingplugins` we provide you with too folders, to either create new view templates or override existing templates.

Providing new templates
-----------------------

Place you templates inside the folder theme/views.
Every file with the extension .pt will be available as a view in Plone.

To find out the default settings and how to change them look here:
https://github.com/plone/plone.app.themingplugins#id5


Overriding existing templates
-----------------------------

To override a template, you place the template into the theme/overrides folder.

The name of the template has to be the dotted namespace + templatename.

.. code-block:: shell

    theme/overrides/plone.app.layout.viewlets.logo.pt

More info here:
https://github.com/plone/plone.app.themingplugins#id4


Providing new templates and Python Scripts
==========================================

With `collective.themefragments <https://pypi.python.org/pypi/collective.themefragments/>`_  it is possible to add PageTemplates which you can use in Diazo, as normal layout views for objects or as snippets in Mosaic editor.

All what you need now is, to provide your PageTemplate files in the ``fragments`` folder, inside the ``theme`` folder.
